---
#
# Main Playbook To Prepare Deployed Nomad Cluster Nodes
#
- hosts: all
  remote_user: ubuntu
  become: yes
  vars:
    ansible_connection: ssh
    ansible_python_interpreter: '{{ansible_playbook_python}}'
    ctop_ver: '0.7.6'

  tasks:
  - name: add official GPG signing keys of third-party distributed tools
    apt_key: url={{item}} state=present
    loop:
    - https://download.docker.com/linux/ubuntu/gpg
    - https://download.gluster.org/pub/gluster/glusterfs/9/rsa.pub
    - https://apt.releases.hashicorp.com/gpg

  - name: add repository list for third-party distributed tools
    copy:
      src: ./templates/
      dest: /etc/apt/sources.list.d/

  - name: run 'apt update' to update cache if the last one is older than 1hr ago
    apt: update_cache=yes cache_valid_time=3600

  - name: set environment dependencies of cluster-node
    apt: name={{item}} state=latest
    loop:
    - apt-transport-https
    - aria2
    - arping
    - bash-completion
    - build-essential
    - ca-certificates
    - curl
    - dnsutils
    - fswatch
    - git
    - gnupg
    - golang
    - ipvsadm
    - jq
    - jsonnet
    - lxc-utils
    - lxc-templates
    - lxctl
    - manpages-dev
    - net-tools
    - nfs-common
    - nfs-kernel-server
    - nfs4-acl-tools
    - nfstrace
    - nfstrace-doc
    - nfswatch
    - nmap
    - postgresql-client
    - python3-dev
    - python3-pip
    - sshfs
    - sshpass
    - socat
    - software-properties-common
    - tig
    - tmux
    - tree
    - unzip
    - whois
    - yamllint
    - zip

  - name: install container runtime and orchestration engine with distributed file system
    apt: name={{item}} state=latest
    loop:
    - containerd.io
    - docker-ce
    - docker-ce-cli
    - glusterfs-server
    - glusterfs-client
    - nomad

  - name: start added service and enable at boot time
    systemd: name={{item}} state=started enabled=yes
    loop:
    - containerd
    - docker
    - glusterd
    - nomad

#
# manage snaps
#
  - name: install classic-snap packages
    snap: name={{item}} state=present classic=yes
    loop:
    - aws-cli
    - doctl
    - google-cloud-sdk
#
# manage python
#
  - name: install python packages
    pip: name={{item}} state=latest executable=pip3
    loop:
    - docker-compose
    - docker
    - httpie
    - mdv

#
# manage software distributed in binary format
#
  - name: download and install "ctop.sh" - cli container stats tool
    get_url:
      url: https://github.com/bcicen/ctop/releases/download/{{ ctop_ver }}/ctop-{{ ctop_ver }}-linux-amd64
      dest: /usr/local/bin/ctop
      mode: 0755

